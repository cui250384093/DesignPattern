package com.yl.principle;

/**
 * @author candk
 * @Description 迪米特原则
 *      又叫最少知道原则，即一个类对自己依赖的类知道的越少越好，也就是说，对于被依赖的类不管多么复杂，都尽量将逻辑封装在类的内部，对外除了提供的public方法，不对外泄露任何信息
 * 1. 一个对象应该对其他对象保持最小的了解
 * 2. 类与类关系越密切，耦合度越大
 *
 * 迪米特法则只与直接的朋友通信
 * 直接的朋友：每个对象都会与其他的对象有耦合关系，只要两个对象之间有耦合关系，我们就说这两个对象之间是朋友关系，耦合的关系很多，依赖、关联、组合、聚合等。
 * 其中，我们称出现成员变量，方法参数，方法返回值中的类为直接的朋友，而出现在局部变量中的类不是直接的朋友。也就是说，陌生的类最好不要以局部变量的形式出现
 * 在类的内部。
 *
 * 迪米特法则只是要求降低类间（对象间）的耦合关系，而不是要求完全没有依赖关系。
 * @date 4/8/21 - 4:04 PM
 */
public class Demeter {
}
